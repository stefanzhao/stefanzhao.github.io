{"remainingRequest":"/Users/stefan/Desktop/camping/campingfront/node_modules/babel-loader/lib/index.js!/Users/stefan/Desktop/camping/campingfront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/stefan/Desktop/camping/campingfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stefan/Desktop/camping/campingfront/node_modules/vue-mapbox/src/components/UI/Popup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/stefan/Desktop/camping/campingfront/node_modules/vue-mapbox/src/components/UI/Popup.vue","mtime":499162500000},{"path":"/Users/stefan/Desktop/camping/campingfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stefan/Desktop/camping/campingfront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/stefan/Desktop/camping/campingfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stefan/Desktop/camping/campingfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.array.includes\";\n//\n//\n//\n//\n//\n//\n//\nimport withEvents from \"../../lib/withEvents\";\nimport withSelfEvents from \"./withSelfEvents\";\nvar popupEvents = {\n  open: \"open\",\n  close: \"close\"\n};\n/**\n * Popup component.\n * @see See [Mapbox Gl JS Popup](https://www.mapbox.com/mapbox-gl-js/api/#popup)\n */\n\nexport default {\n  name: \"Popup\",\n  mixins: [withEvents, withSelfEvents],\n  inject: {\n    mapbox: {\n      default: null\n    },\n    map: {\n      default: null\n    },\n    marker: {\n      default: null\n    }\n  },\n  props: {\n    /**\n     * If `true`, a close button will appear in the top right corner of the popup.\n     * Mapbox GL popup option.\n     */\n    closeButton: {\n      type: Boolean,\n      default: true\n    },\n\n    /**\n     * Mapbox GL popup option.\n     * If `true`, the popup will closed when the map is clicked. .\n     */\n    closeOnClick: {\n      type: Boolean,\n      default: true\n    },\n\n    /**\n     * Mapbox GL popup option.\n     * A string indicating the popup's location relative to the coordinate set.\n     * If unset the anchor will be dynamically set to ensure the popup falls within the map container with a preference for 'bottom' .\n     *  'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right'\n     */\n    anchor: {\n      validator: function validator(value) {\n        var allowedValues = [\"top\", \"bottom\", \"left\", \"right\", \"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"];\n        return typeof value === \"string\" && allowedValues.includes(value);\n      },\n      default: undefined\n    },\n\n    /**\n     * Mapbox GL popup option.\n     * A pixel offset applied to the popup's location\n     * a single number specifying a distance from the popup's location\n     * a PointLike specifying a constant offset\n     * an object of Points specifing an offset for each anchor position Negative offsets indicate left and up.\n     */\n    offset: {\n      type: [Number, Object, Array],\n      default: function _default() {\n        return [0, 0];\n      }\n    },\n    coordinates: {\n      type: Array\n    },\n\n    /**\n     * Component option.\n     * If `true`, popup treats data in deafult slot as plain text\n     */\n    onlyText: {\n      type: Boolean,\n      default: false\n    },\n    showed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      initial: true,\n      popup: undefined\n    };\n  },\n  computed: {\n    open: {\n      get: function get() {\n        if (this.popup !== undefined) {\n          return this.popup.isOpen();\n        }\n\n        return false;\n      },\n      set: function set(value) {\n        if (this.map && this.popup) {\n          if (value) {\n            this.popup.remove();\n          } else {\n            this.popup.addTo(this.map);\n          }\n        }\n      }\n    }\n  },\n  watch: {\n    coordinates: function coordinates(lngLat) {\n      if (this.initial) return;\n      this.popup.setLngLat(lngLat);\n    },\n    showed: function showed(next, prev) {\n      if (next !== prev) {\n        this.open = next;\n\n        if (this.marker) {\n          this.marker.togglePopup();\n        }\n      }\n    }\n  },\n  created: function created() {\n    this.popup = new this.mapbox.Popup(this.$props);\n  },\n  mounted: function mounted() {\n    this.$_addPopup();\n    this.initial = false;\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.map) {\n      this.popup.remove();\n      this.$_emitEvent(\"removed\");\n    }\n  },\n  methods: {\n    $_addPopup: function $_addPopup() {\n      this.popup = new this.mapbox.Popup(this.$props);\n\n      if (this.coordinates !== undefined) {\n        this.popup.setLngLat(this.coordinates);\n      }\n\n      if (this.$slots.default !== undefined) {\n        if (this.onlyText) {\n          if (this.$slots.default[0].elm.nodeType === 3) {\n            var tmpEl = document.createElement(\"span\");\n            tmpEl.appendChild(this.$slots.default[0].elm);\n            this.popup.setText(tmpEl.innerText);\n          } else {\n            this.popup.setText(this.$slots.default[0].elm.innerText);\n          }\n        } else {\n          this.popup.setDOMContent(this.$slots.default[0].elm);\n        }\n      }\n\n      this.$_bindSelfEvents(Object.keys(popupEvents), this.popup);\n      this.$_emitEvent(\"added\", {\n        popup: this.popup\n      });\n\n      if (this.marker) {\n        this.marker.setPopup(this.popup);\n      }\n\n      if (this.showed) {\n        this.open = true;\n\n        if (this.marker) {\n          this.marker.togglePopup();\n        }\n      }\n    },\n    $_emitSelfEvent: function $_emitSelfEvent(event) {\n      this.$_emitMapEvent(event, {\n        popup: this.popup\n      });\n    },\n    remove: function remove() {\n      this.popup.remove();\n      this.$_emitEvent(\"remove\", {\n        popup: this.popup\n      });\n    }\n  }\n};",{"version":3,"sources":["Popup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div style=\"display: none\">\n    <!-- @slot Slot for popup content -->\n    <slot />\n  </div>\n</template>\n\n<script>\nimport withEvents from \"../../lib/withEvents\";\nimport withSelfEvents from \"./withSelfEvents\";\n\nconst popupEvents = {\n  open: \"open\",\n  close: \"close\"\n};\n\n/**\n * Popup component.\n * @see See [Mapbox Gl JS Popup](https://www.mapbox.com/mapbox-gl-js/api/#popup)\n */\nexport default {\n  name: \"Popup\",\n  mixins: [withEvents, withSelfEvents],\n\n  inject: {\n    mapbox: {\n      default: null\n    },\n    map: {\n      default: null\n    },\n    marker: {\n      default: null\n    }\n  },\n\n  props: {\n    /**\n     * If `true`, a close button will appear in the top right corner of the popup.\n     * Mapbox GL popup option.\n     */\n    closeButton: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Mapbox GL popup option.\n     * If `true`, the popup will closed when the map is clicked. .\n     */\n    closeOnClick: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Mapbox GL popup option.\n     * A string indicating the popup's location relative to the coordinate set.\n     * If unset the anchor will be dynamically set to ensure the popup falls within the map container with a preference for 'bottom' .\n     *  'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right'\n     */\n    anchor: {\n      validator(value) {\n        let allowedValues = [\n          \"top\",\n          \"bottom\",\n          \"left\",\n          \"right\",\n          \"top-left\",\n          \"top-right\",\n          \"bottom-left\",\n          \"bottom-right\"\n        ];\n        return typeof value === \"string\" && allowedValues.includes(value);\n      },\n      default: undefined\n    },\n    /**\n     * Mapbox GL popup option.\n     * A pixel offset applied to the popup's location\n     * a single number specifying a distance from the popup's location\n     * a PointLike specifying a constant offset\n     * an object of Points specifing an offset for each anchor position Negative offsets indicate left and up.\n     */\n    offset: {\n      type: [Number, Object, Array],\n      default: () => [0, 0]\n    },\n    coordinates: {\n      type: Array\n    },\n\n    /**\n     * Component option.\n     * If `true`, popup treats data in deafult slot as plain text\n     */\n    onlyText: {\n      type: Boolean,\n      default: false\n    },\n\n    showed: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      initial: true,\n      popup: undefined\n    };\n  },\n\n  computed: {\n    open: {\n      get() {\n        if (this.popup !== undefined) {\n          return this.popup.isOpen();\n        }\n        return false;\n      },\n      set(value) {\n        if (this.map && this.popup) {\n          if (value) {\n            this.popup.remove();\n          } else {\n            this.popup.addTo(this.map);\n          }\n        }\n      }\n    }\n  },\n\n  watch: {\n    coordinates(lngLat) {\n      if (this.initial) return;\n      this.popup.setLngLat(lngLat);\n    },\n\n    showed(next, prev) {\n      if (next !== prev) {\n        this.open = next;\n        if (this.marker) {\n          this.marker.togglePopup();\n        }\n      }\n    }\n  },\n\n  created() {\n    this.popup = new this.mapbox.Popup(this.$props);\n  },\n\n  mounted() {\n    this.$_addPopup();\n    this.initial = false;\n  },\n\n  beforeDestroy() {\n    if (this.map) {\n      this.popup.remove();\n      this.$_emitEvent(\"removed\");\n    }\n  },\n\n  methods: {\n    $_addPopup() {\n      this.popup = new this.mapbox.Popup(this.$props);\n      if (this.coordinates !== undefined) {\n        this.popup.setLngLat(this.coordinates);\n      }\n      if (this.$slots.default !== undefined) {\n        if (this.onlyText) {\n          if (this.$slots.default[0].elm.nodeType === 3) {\n            let tmpEl = document.createElement(\"span\");\n            tmpEl.appendChild(this.$slots.default[0].elm);\n            this.popup.setText(tmpEl.innerText);\n          } else {\n            this.popup.setText(this.$slots.default[0].elm.innerText);\n          }\n        } else {\n          this.popup.setDOMContent(this.$slots.default[0].elm);\n        }\n      }\n\n      this.$_bindSelfEvents(Object.keys(popupEvents), this.popup);\n\n      this.$_emitEvent(\"added\", { popup: this.popup });\n\n      if (this.marker) {\n        this.marker.setPopup(this.popup);\n      }\n      if (this.showed) {\n        this.open = true;\n\n        if (this.marker) {\n          this.marker.togglePopup();\n        }\n      }\n    },\n\n    $_emitSelfEvent(event) {\n      this.$_emitMapEvent(event, { popup: this.popup });\n    },\n\n    remove() {\n      this.popup.remove();\n      this.$_emitEvent(\"remove\", { popup: this.popup });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/vue-mapbox/src/components/UI"}]}